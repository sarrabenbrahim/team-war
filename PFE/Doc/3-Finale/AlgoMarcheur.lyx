#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language french
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Algorithme du marcheur
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Au terme de notre étude sur l'existant et l'état de l'art, il nous est apparu
 que le développement d'un outils adapté au problème spécifique nous semblait
 nécessaire.
 En effet le développement d'un modèle entier
\begin_inset Note Note
status open

\begin_layout Plain Layout
complet ?
\end_layout

\end_inset

 parait plus réalisable, à l'heure d'aujourd'hui
\begin_inset Note Note
status open

\begin_layout Plain Layout
actuelle ?
\end_layout

\end_inset

, que l'adaptation d'un outils.
 
\end_layout

\begin_layout Standard
Pour résumer
\begin_inset Note Note
status open

\begin_layout Plain Layout
cela ?
\end_layout

\end_inset

 nous allons détailler le modèle que nous nous proposons de développer par
 la suite.
 Le modèle du marcheur
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Le nom 
\begin_inset Quotes fld
\end_inset

modèle du marcheur
\begin_inset Quotes frd
\end_inset

 est un clin d'œil à la 
\begin_inset Quotes fld
\end_inset

marche de l'ivrogne
\begin_inset Quotes frd
\end_inset

 qui est un modèle utilisé dans la thermodynamique et le mouvement brownien.
 
\end_layout

\end_inset

, ce modèle permet dans un premier temps de déterminer un indice de risque
 pour les pièces (
\begin_inset Formula $W@R$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Wafer at Risk
\end_layout

\end_inset

).
 Dans un deuxième temps de se servir de cette indice de confiance pour détermine
r les pièces les plus risqués pour remonter aux pièces impactées.
\end_layout

\begin_layout Standard
L'idée de départ est assez simple, on se propose de regarder la probabilité
 d'un marcheur dans une ville d'être agressé dans une ville.
\end_layout

\begin_layout Section
Hypothèses
\end_layout

\begin_layout Standard
Afin de rendre le propos le plus clair possible nous allons poser toutes
 les hypothèses nécessaires au développement de l'algorithme.
\end_layout

\begin_layout Itemize
Un marcheur (produit) augmente sa 
\begin_inset Quotes fld
\end_inset

chance
\begin_inset Quotes frd
\end_inset

 d'être blessé (défectueux) au fur et à mesure qu'il se ballade dans la
 ville (Traverse beaucoup d'ateliers 
\begin_inset Note Note
status open

\begin_layout Plain Layout
des postes de travail ?
\end_layout

\end_inset

).
\end_layout

\begin_layout Itemize
Le marcheur qui traverse des quartiers dangereux (Machine de production)
 à plus de chance d'être blessé dans un quartier dangereux.
\end_layout

\begin_layout Itemize
Propriété du quartier (Machine de production)
\end_layout

\begin_deeper
\begin_layout Itemize
Le taux de criminalité augmente linéairement.
\end_layout

\begin_layout Itemize
La criminalité augmente en fonction du nombre de marcheurs qui traverse
 le quartier.
\end_layout

\begin_layout Itemize
La criminalité est remise à un niveau seuil quand la police passe.
 (Tache qualité)
\end_layout

\begin_layout Itemize
La criminalité est remise à un seuil de confiace si la santé du marcheur
 est bonne en sortant du quartier.
\end_layout

\begin_deeper
\begin_layout Itemize
On s'assure de la santé d'un marcheur en faisant passer un médecin (Mesure
 métrologique).
\end_layout

\begin_layout Itemize
Si la santé du marcheur est bonne, cela veut dire que la criminalité a été
 sur-évaluée et il convient de la diminuer.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Le contrôle de la santé d'un marcheur donne de l'information uniquement
 sur le dernier quartier vu par le marcheur.
\end_layout

\begin_layout Itemize
Il y a trois type de marcheur, un petit, moyen et un grand (technologie
 logique, mémoire et mixte)
\end_layout

\begin_deeper
\begin_layout Itemize
Plus un marcheur est petit plus il aura de chance d'être agressé.
\end_layout

\end_deeper
\begin_layout Itemize
On formalise le problème : 
\begin_inset Formula \[
W@R=1-\prod_{i=1}^{N}\left(F_{Machine[i]}\times F_{Produit}\right)\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
manque l'explication des variables.
\end_layout

\begin_layout Plain Layout
avec :
\end_layout

\begin_layout Plain Layout
- F....
\end_layout

\begin_layout Plain Layout
- F ...
\end_layout

\begin_layout Plain Layout
- WAR ...
\end_layout

\end_inset


\end_layout

\begin_layout Section
L'algorithme
\end_layout

\begin_layout Standard
On définit différents niveaux de complexité à notre algorithme, pour chaque
 niveau de complexité nous détaillerons les différences.
 Il est à noter que tous ces calculs sont donné pour le calcul du 
\begin_inset Formula $W@R$
\end_inset

 d'un seul marcheur (produit).
 On fera tourner cet algorithme dans une boucle pour comparer les différents
 produits entre eux.
\begin_inset Note Note
status open

\begin_layout Plain Layout
la suite ?
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Niveau 0 : Modèle simple
\end_layout

\begin_layout Standard
On suppose que les machines ont une fiabilité 
\begin_inset Formula $F=0,5=50\%$
\end_inset

, il y a 
\begin_inset Formula $N$
\end_inset

 étapes de fabrication, et 
\begin_inset Formula $W@R_{produit}$
\end_inset

 est la probabilité du produit d'être défectueux
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Probabilité au marcheur d'être blessé.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

 à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Itemize
\begin_inset Formula $W@R=1-F_{Produit}$
\end_inset


\end_layout

\begin_layout Subsection
Niveau 1 : Modèle des quartiers
\end_layout

\begin_layout Standard
On suppose maintenant que la fiabilité est différente sur chaque machine
 
\begin_inset Formula $F_{Machine[i]}$
\end_inset


\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

 à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F_{Machine[i]}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Itemize
\begin_inset Formula $W@R=1-F_{Produit}$
\end_inset


\end_layout

\begin_layout Standard
Exemple de loi de distribution de 
\begin_inset Formula $F_{Machine[i]}$
\end_inset

: Répartition Uniforme, Loi Normale, Loi de Poisson, Loi définie par morceaux
 (retour d'expérience).
\end_layout

\begin_layout Subsection
Niveau 2 : Modèle des quartiers avec criminalité croissante
\end_layout

\begin_layout Standard
On suppose maintenant que la fiabilité est différente sur chaque machine
 et décroit linéairement.
\end_layout

\begin_layout Standard
\begin_inset Formula $F_{MachineTemps[i]}=1-\left(\lambda_{Machine}\times T_{Machine}\right)$
\end_inset

, avec 
\begin_inset Formula $T_{Machine}$
\end_inset

 est le temps du dernière contrôle de la machine et 
\begin_inset Formula $\lambda_{Machine}$
\end_inset

 est le coefficient de décroissance de la fiabilité.
 
\end_layout

\begin_layout Standard
On a aussi 
\begin_inset Formula $F_{MachineProduits[i]}=1-\left(\lambda_{Machine}\times N_{Produit}\right)$
\end_inset

 avec 
\begin_inset Formula $N_{Produit}$
\end_inset

 le nombre de produits passés sur la machine.
\end_layout

\begin_layout Standard
Nous prendrons pour 
\begin_inset Formula $F_{Machine}=\min\left(F_{MachineTemps[i]},F_{MachineProduits[i]}\right)$
\end_inset


\end_layout

\begin_layout Standard
Nous verrons à l'usage ce qui est le plus cohérent à l'usage.
\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F_{Machine[i]}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Itemize
\begin_inset Formula $W@R=1-F_{Produit}$
\end_inset


\end_layout

\begin_layout Subsection
Niveau 3 : Modèle du marcheur in-homogène
\end_layout

\begin_layout Standard
On suppose maintenant que le type de marcheur (la technologie), est plus
 susceptible d'être blessé suivant son type intrinsèque
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F_{Produit}=\beta_{type}\times F_{Produit}\]

\end_inset


\end_layout

\begin_layout Standard
avec 
\begin_inset Formula $\beta_{type}\in\left\{ \beta_{petit};\beta_{moyen};\beta_{grand}\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Comme dans la vie réelle un grand aura moins de chance d'être agressé qu'un
 petit.
\end_layout

\begin_layout Standard
Afin de faire le parallèle avec les technologie :
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{grand}$
\end_inset

 correspond aux technologies de logique, qui sont les plus faciles à mettre
 en oeuvre
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{moyen}$
\end_inset

 correspond aux technologies de mémoires, qui sont légèrement plus complexe.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{petit}$
\end_inset

 correspond aux technologies mixtes
\begin_inset Foot
status open

\begin_layout Plain Layout
mémoire et logique
\end_layout

\end_inset

 qui sont les technologies les plus délicates à mettre en oeuvre et ayant
 de fortes chances de générer de la non qualité.
\end_layout

\begin_layout Standard
Le calcul s'effectue de la même manière ensuite, on introduira simplement
 la nouvelle fiabilité du produit (
\begin_inset Formula $F_{Produit}$
\end_inset

)
\end_layout

\begin_layout Section
Code de l'algorithme
\end_layout

\begin_layout Standard
Dans un soucis de performance (vu la quantité d'information à traiter) nous
 allons développer notre code en Java, la structure des données et l'algorithme
 nous incite à utiliser ce type de langage.
 De plus comme il s'agit simplement de la validation d'algorithme, ce code
 n'a pas pour vocation d'être développé ultérieurement.
 De plus 
\begin_inset Note Note
status open

\begin_layout Plain Layout
la suite ?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En effet le Java est le langage enseigné dans notre formation et permettra
 une implication de tous
\begin_inset Note Note
status open

\begin_layout Plain Layout
les simples, et proche de la machine, ce qui se traduit par de haute performance
s.
 Heu, comprends pas le lien avec le début de la phrase.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Traitement des données
\end_layout

\begin_layout Subsection
Analyse des données
\end_layout

\begin_layout Standard
Afin de tester notre algorithme nous avons récupéré un fichier de données
 de 
\emph on
STElectronics
\emph default

\begin_inset Note Note
status open

\begin_layout Plain Layout
Y a pas Micro dans le nom ?
\end_layout

\end_inset

, afin de bien comprendre ces données nous allons les analyser.
 
\end_layout

\begin_layout Standard
On distingue différents champs de données :
\end_layout

\begin_layout Description
taskID
\begin_inset space ~
\end_inset

(Champs
\begin_inset space ~
\end_inset

Vide) Le premier champs vide est le numéro de la tâche, chaque tâche est
 numéroté de manière unique.
\end_layout

\begin_layout Description
Date Il s'agit de la date à laquelle l'évènement étudié a eu lieux.
 Il est à noter que notre fichier de données repose sur 15 jours de productions,
 le temps est donné en secondes.
\end_layout

\begin_deeper
\begin_layout Itemize
Le champs de la date est composé de 
\begin_inset Formula $14$
\end_inset

 chiffres, exemple : 
\begin_inset Formula $20101010162720$
\end_inset


\end_layout

\begin_layout Itemize
Les 4 premier chiffres représentent l'année, ici 
\begin_inset Formula $2010$
\end_inset


\end_layout

\begin_layout Itemize
Les 2 chiffres suivants représentent le mois, ici 
\begin_inset Formula $10$
\end_inset

 donc octobre
\end_layout

\begin_layout Itemize
Les 2 chiffres suivants représentent le jour, ici 
\begin_inset Formula $10$
\end_inset


\end_layout

\begin_layout Itemize
Les 6 chiffres suivants représentent l'heure, ici 
\begin_inset Formula $162720$
\end_inset

 qui donne 
\begin_inset Formula $16$
\end_inset

 heure 
\begin_inset Formula $27$
\end_inset

 min et 
\begin_inset Formula $20$
\end_inset

 secondes
\end_layout

\end_deeper
\begin_layout Description
Lot
\begin_inset space ~
\end_inset

(batch) Il s'agit du numéro du lot, impacté par la tâche.
 Dans le cas où ce champ est vide, cela veut dire que la machine ne traite
 pas de produit mais qu'on effectue une tâche qualité sur la machine.
\end_layout

\begin_layout Description
Oper
\begin_inset space ~
\end_inset

(operation) Ce champs qualifie le type d'opération effectués sur le lot
\end_layout

\begin_layout Description
Nbr
\begin_inset space ~
\end_inset

(quantity) Représente le nombre de Wafers concernés par un événement de
 process, c'est-à-dire le nombre de plaques passées dans la machine.
\end_layout

\begin_layout Description
Event Permet de qualifier le type d'évènement.
 Dans notre exemple nous avons trois types d'évènements différents :
\end_layout

\begin_deeper
\begin_layout Description
PRP représente une étape de fabrication du produit
\end_layout

\begin_layout Description
MSL indique une mesure effectuée sur un lot
\end_layout

\begin_layout Description
MSE indique une mesure réalisée sur un équipement (tâche de qualité, ou
 
\begin_inset Quotes fld
\end_inset

TQ
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Description
Tech
\begin_inset space ~
\end_inset

(technology) Représente la technologie, nous disposons de cinq technologies
 différentes.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Quel technologie est la plus compliqué ?
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
lesquelles ?
\end_layout

\end_inset


\end_layout

\begin_layout Description
Eqpt
\begin_inset space ~
\end_inset

(workstationID) Représente le numéro de l'équipement, chaque équipement
 est représenté par un identifiant unique.
\end_layout

\begin_layout Subsection
Classe des entités
\end_layout

\begin_layout Standard
Afin d'utiliser les données au mieux, nous allons organiser les données
 sous forme de la structure suivante
\begin_inset Note Note
status open

\begin_layout Plain Layout
présentée ci-après ?
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Dans un premier temps nous allons organiser les données par produits, machines
 et ordres.
 Dans le détail :
\end_layout

\begin_layout Description
Date classe qui organise une date, il est à noter que cette structure particuliè
re repose sur la classe native Java qui s'appelle Date
\begin_inset Note Note
status open

\begin_layout Plain Layout
éponyme ?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Entier
\begin_inset space ~
\end_inset

year
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

month
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

day
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

hour
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

minutes
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

secondes
\end_layout

\end_deeper
\begin_layout Description
Traçabilité
\begin_inset space ~
\end_inset

(Tracability) structure de la mémoire des événements
\end_layout

\begin_deeper
\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Tâche numéro de tâche
\end_layout

\begin_layout Description
Date
\begin_inset space ~
\end_inset

date Donne la date de chaque tâche.
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Type Précise le type de tâche 
\end_layout

\end_deeper
\begin_layout Description
Machine
\begin_inset space ~
\end_inset

(WorkStation) Qualifie la ressource qui usine le procédé
\end_layout

\begin_deeper
\begin_layout Description
Collection
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

traçabilité 
\begin_inset Quotes fld
\end_inset

mémoire
\begin_inset Quotes frd
\end_inset

 de la ressource, c'est elle qui stocke les tâches se produisant sur la
 machine (La structure de traçabilité sera détaillé un peu plus loin)
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Nom Le nom de la machine
\end_layout

\end_deeper
\begin_layout Description
Lot
\begin_inset space ~
\end_inset

(Batch) Classe qui qualifie un lot
\end_layout

\begin_deeper
\begin_layout Description
Collection
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

traçabilité 
\begin_inset Quotes fld
\end_inset

mémoire
\begin_inset Quotes frd
\end_inset

 du produit, c'est elle qui stocke les tâches se produisant sur la machine.
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Nom Le nom du produit
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

Technologie Permet de définir le type de technologie du lot
\end_layout

\end_deeper
\begin_layout Standard
Cette structure nous permet d'organiser les données de manière logique,
 et permet de piocher facilement dans les données.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de classe des objets entités
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../Images/ClasseEntity.dia
	lyxscale 50
	width 100col%
	height 90theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Ce diagramme de classe représente les objets sur lesquels nous travaillerons
 et utiliseront notre algorithme
\emph default
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Spécification du code
\end_layout

\begin_layout Subsection
Marcheur 
\end_layout

\begin_layout Standard
Contient l'algorithme a partir, il effectue le calcule 
\begin_inset Note Note
status open

\begin_layout Plain Layout
L'algorithme a proprement parler de calcul de fiabilité est une méthode
 de la classe batch
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Lecture de fichier (Storage)
\end_layout

\begin_layout Standard
Nous organisons notre lecture de fichier de façon à ranger les informations
 dans la bonne structure.
\end_layout

\begin_layout Standard
On définit une classe qui lit les fichiers et instancie les traçabilités
 associées à chaque ligne.
\end_layout

\begin_layout Subsection
Extracteur
\end_layout

\begin_layout Standard
Ces classes interprètent les traçabilité extraites par le load et crée les
 objets batch, workstation et insère les traçabilités associées.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ces classes construisent/instancient les différents objets (lesquels) à
 partir du fichier de données.
 Pour cela elles ....?
\end_layout

\end_inset


\end_layout

\end_body
\end_document
