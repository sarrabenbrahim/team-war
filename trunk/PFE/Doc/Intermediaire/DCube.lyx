#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language french
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Methode 
\begin_inset Formula $D^{3}$
\end_inset


\end_layout

\begin_layout Section
Généralités
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ce qui suit est tapé suite à l'explication de Mr Mercantini
\end_layout

\end_inset

Cette algorithme
\begin_inset CommandInset citation
LatexCommand cite
key "art:DCube"

\end_inset

 consiste à regarder à la sortie tous les produits (ayant des chemins de
 productions différentes) et déterminer quels sont les points dans la production
 qui sont le plus sensible.
 L'idée est d'observer à la fin les produits finis et de déterminer les
 opérations à risques par analyse statistique des défauts.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Schéma de la situation traité par 
\begin_inset Formula $D^{3}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Schema-DCube"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../Images/DCubeShema.png
	lyxscale 40
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Les produits issus de la production proviennent de différents chemins l'analyse
 des produits finis permet de connaître les opérations sensible grâce à
 la méthode 
\begin_inset Formula $D^{3}$
\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Objectifs de la méthode
\end_layout

\begin_layout Itemize
Objectif minimiser le nombre maximum de test pour identifier les objets
 défectueux.
 
\end_layout

\begin_layout Section
Hypothèse de la méthode
\end_layout

\begin_layout Itemize
Il n'y a que 
\begin_inset Formula $2$
\end_inset

 état pour le produit 
\emph on
defective
\emph default
 ou 
\emph on
good
\emph default
.
\end_layout

\begin_layout Itemize
Chaque test se fait sur un sous ensemble 
\emph on

\begin_inset Formula $n$
\end_inset


\emph default
 objets et n'ont que deux possibilités 
\emph on
positive
\emph default
 ou 
\emph on
negative
\emph default
.
\end_layout

\begin_layout Itemize
Un résultat 
\emph on
positive
\emph default
 indique que l'échantillon (ou sous ensemble) contient au moins un élément
 
\emph on
defective
\end_layout

\begin_layout Itemize
Un résultat 
\emph on
negative
\emph default
 indique que l'échantillon est pur et qu'il ne contient que des éléments
 
\emph on
good
\emph default
.
\end_layout

\begin_layout Itemize
Deux type de méthodes : 
\end_layout

\begin_deeper
\begin_layout Itemize
Stochastique : les objets ont une probabilité d'être 
\emph on
defective
\emph default
 et le but est de diminuer le nombre de test attendu pour identifier tous
 les éléments 
\emph on
defective
\emph default
.
\end_layout

\begin_layout Itemize
Déterministe : le nombre d'éléments 
\emph on
defective
\emph default
 est connu à l'avance, l'objectif est de minimiser le nombre maximal de
 test pour identifier tous les éléments 
\emph on
defective
\emph default
.
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $M(n,d)$
\end_inset

 nombre optimal de test optimal pour identifier les 
\begin_inset Formula $d$
\end_inset

 éléments 
\emph on
defective 
\emph default
quand on connaît le nombre 
\begin_inset Formula $d$
\end_inset


\emph on
 
\emph default
parmi 
\begin_inset Formula $n$
\end_inset

 éléments.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $T_{A}(n,d)$
\end_inset

 nombre de test requis par l'algorithme 
\begin_inset Formula $A$
\end_inset

 pour identifier parmi 
\begin_inset Formula $n$
\end_inset

 éléments tous les 
\begin_inset Formula $d$
\end_inset

 
\emph on
defective
\emph default
 élément quand on connaît 
\begin_inset Formula $d$
\end_inset

 à l'avance.
 
\end_layout

\begin_layout Itemize
Donc 
\begin_inset Formula $A$
\end_inset

 est 
\begin_inset Formula $\alpha$
\end_inset

-compétitif si pour 
\begin_inset Formula $0\leq d\leq n$
\end_inset

, 
\begin_inset Formula $T(n,d)\leq\alpha M(n,d)+\beta$
\end_inset

 avec 
\begin_inset Formula $\alpha=2,75$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Rajouter référence
\end_layout

\end_inset

 et 
\begin_inset Formula $\beta$
\end_inset

 une constante et un algorithme de ce genre existe.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Quelqu'un lit ce rapport ?
\end_layout

\end_inset


\end_layout

\begin_layout Section
L'algorithme 
\end_layout

\begin_layout Standard
L'algorithme utilise la stratégie suivante.
 Il teste des collections disjointes d'item de taille 
\begin_inset Formula $1,2,...,2^{i}$
\end_inset

 jusqu'à ce qu'il trouve un élément 
\emph on
defective
\emph default
.
 
\end_layout

\begin_layout Standard
À cette étape l'algorithme a detecté 
\begin_inset Formula $1+2+3+...+2^{i-1}=2^{i}-1$
\end_inset

 bon éléments et a trouvé une collection contaminée de taille 
\begin_inset Formula $2^{i}$
\end_inset

.
 En utilisant une recherche binaire l'élément peut-être détecté par 
\begin_inset Formula $i$
\end_inset

 tests additionnels.
\end_layout

\begin_layout Standard
L'algorithme effectuera 
\begin_inset Formula $i+1$
\end_inset

 tests, donc pour le prix de 
\begin_inset Formula $2i+1$
\end_inset

 tests l'algorithme apprend l'état de 
\begin_inset Formula $2^{i}$
\end_inset

 objets.
\end_layout

\begin_layout Standard
En d'autre mot l'état de 
\begin_inset Formula $a$
\end_inset

 nouveau éléments est connu en effectuant 
\begin_inset Formula $2\log a+1$
\end_inset

 tests.
\end_layout

\begin_layout Section
Algorithme détaillé
\end_layout

\begin_layout Subsection*
Algorithm DOUBLE
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Présentation en détail de l'algo à venir so soon ...
\end_layout

\end_inset


\end_layout

\end_body
\end_document
