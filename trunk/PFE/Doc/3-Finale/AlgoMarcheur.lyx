#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass amsbook
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\language french
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Algorithme du marcheur
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Au terme de notre étude sur l'existant et l'état de l'art, il nous est apparu
 que le développement d'un outils adapté au problème spécifique nous semblait
 nécessaire.
 En effet le développement d'un modèle complet parait plus réalisable, à
 l'heure actuelle, que l'adaptation d'un outils inadapté à ce type de problémati
que.
 
\end_layout

\begin_layout Standard
Pour résumer notre problème nous allons détailler le modèle que nous nous
 proposons de développer par la suite.
 Le modèle du marcheur
\begin_inset Foot
status open

\begin_layout Plain Layout
Le nom 
\begin_inset Quotes fld
\end_inset

modèle du marcheur
\begin_inset Quotes frd
\end_inset

 est un clin d'œil à la 
\begin_inset Quotes fld
\end_inset

marche de l'ivrogne
\begin_inset Quotes frd
\end_inset

 qui est un modèle utilisé dans la thermodynamique et le mouvement brownien.
\end_layout

\end_inset

, ce modèle permet dans un premier temps de déterminer un indice de risque
 pour les pièces (
\begin_inset Formula $W@R$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Wafer at Risk
\end_layout

\end_inset

).
 Dans un deuxième temps de se servir de cette indice de confiance pour détermine
r les pièces les plus risqués, priorisé leur contrôle, et remonter plus
 rapidement aux lots impactées.
 Afin de représenter ces données nous coupleront ces données avec l'avancement
 du lot dans l'usine.
\end_layout

\begin_layout Standard
L'idée de départ est assez simple, on se propose de regarder la probabilité
 d'un marcheur dans une ville d'être agressé en se baladant.
\end_layout

\begin_layout Section
Hypothèses
\end_layout

\begin_layout Standard
Afin de rendre le propos le plus clair possible nous allons poser toutes
 les hypothèses nécessaires au développement de l'algorithme.
\end_layout

\begin_layout Itemize
Un marcheur (un lot ou 
\emph on
Batch
\emph default
) augmente sa 
\begin_inset Quotes fld
\end_inset

chance
\begin_inset Quotes frd
\end_inset

 d'être blessé (défectueux) au fur et à mesure qu'il se ballade dans la
 ville (Traverse beaucoup de postes de travail ou 
\emph on
Workstation
\emph default
).
\end_layout

\begin_layout Itemize
Le marcheur qui traverse des quartiers dangereux (Machine de production,
 
\emph on
Workstation
\emph default
) a plus de chance d'être blessé dans un quartier dangereux.
\end_layout

\begin_layout Itemize
Propriété du quartier dynamique (Machine de production)
\end_layout

\begin_deeper
\begin_layout Itemize
Le taux de criminalité augmente linéairement.
 Dans notre cas la sureté d'un quartier correspond à la fiabilité de la
 machine, de fait la fiabilité de la machine vaut donc 
\begin_inset Formula $Fiabilité=Sureté_{Défaut}-Taux_{Criminalité}$
\end_inset

 ou dans notre problème 
\begin_inset Formula $F_{Machine}=F_{MachineDefaut}-D_{Machine}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Avec 
\begin_inset Formula $D_{Machine}$
\end_inset

 est le déreglement de la machine
\end_layout

\begin_layout Itemize
\begin_inset Formula $F_{Machine}$
\end_inset

 est la fiabilité de la machine ou sûreté du quartier
\end_layout

\begin_layout Itemize
\begin_inset Formula $F_{MachineDefaut}$
\end_inset

 est le niveau de fiabilité après un contrôle de qualité, ou le niveau de
 sureté après le passage de la police.
\end_layout

\end_deeper
\begin_layout Itemize
La criminalité augmente en fonction du nombre de marcheurs qui traverse
 le quartier.
 
\begin_inset Formula $ $
\end_inset

 Ce qui nous donne 
\begin_inset Formula $D_{Machine}=N_{Produit}\times\lambda_{Dereglement}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Où 
\begin_inset Formula $\lambda_{Dereglement}$
\end_inset

 est le coefficient de déregelment 
\end_layout

\end_deeper
\begin_layout Itemize
La criminalité est remise à un niveau seuil quand la police passe.
 (Tache qualité)
\end_layout

\begin_layout Itemize
La criminalité est remise à un seuil de confiace si la santé du marcheur
 est bonne en sortant du quartier.
\end_layout

\begin_deeper
\begin_layout Itemize
On s'assure de la santé d'un marcheur en faisant passer un médecin (Mesure
 métrologique).
\end_layout

\begin_layout Itemize
Si la santé du marcheur est bonne, cela veut dire que la criminalité a été
 sur-évaluée et il convient de la diminuer.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Le contrôle de la santé d'un marcheur donne de l'information uniquement
 sur le dernier quartier vu par le marcheur.
\end_layout

\begin_layout Itemize
Il y a trois type de marcheur, un petit, moyen et un grand (technologie
 logique, mémoire et mixte)
\end_layout

\begin_deeper
\begin_layout Itemize
Plus un marcheur est petit plus il aura de chance d'être agressé.
\end_layout

\end_deeper
\begin_layout Itemize
On formalise le problème : 
\begin_inset Formula \begin{equation}
Indice_{Santé}=\prod_{i=1}^{N}\left(F_{Machine[i]}\times F_{Produit}\right)\end{equation}

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $I_{Machine[i]}$
\end_inset

 est la fiabilité de la machine 
\begin_inset Formula $i$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $I_{Produit}$
\end_inset

 est la fiabilité du produit.
\end_layout

\begin_layout Itemize
\begin_inset Formula $Indice_{Santé}$
\end_inset

 est un indice de confiance plus cette valeur est basse plus le lot a de
 chance d'être deffectueux et un contrôle s'impose au plus vite.
\begin_inset Note Note
status open

\begin_layout Plain Layout
Remplacer W@R par indice de santé et F_machine est un indice de santé 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
L'algorithme
\end_layout

\begin_layout Standard
On définit différents niveaux de complexité à notre algorithme, pour chaque
 niveau de complexité nous détaillerons les différences.
 Il est à noter que tous ces calculs sont donné pour le calcul du 
\begin_inset Formula $W@R$
\end_inset

 d'un seul marcheur (produit).
 On fera tourner cet algorithme dans une boucle pour comparer les différents
 produits entre eux.
 Ensuite on déterminera un classement des produits les plus risqué et cela
 permettra de savoir rapidement quel produit contrôler en priorité et suivant
 le resultat du contrôle impacter les autres pièces qui sont passés sur
 les machines similaires
\end_layout

\begin_layout Subsection
Niveau 0 : Modèle simple
\end_layout

\begin_layout Standard
On suppose que les machines ont une fiabilité 
\begin_inset Formula $F_{Machine}=0,5=50\%$
\end_inset

, il y a 
\begin_inset Formula $N$
\end_inset

 étapes de fabrication, et 
\begin_inset Formula $Indice_{santé}$
\end_inset

 est la probabilité du produit d'être défectueux
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Probabilité au marcheur d'être blessé.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

 à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Subsection
Niveau 1 : Modèle des quartiers
\end_layout

\begin_layout Standard
On suppose maintenant que la fiabilité est différente sur chaque machine
 
\begin_inset Formula $F_{Machine[i]}$
\end_inset


\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

 à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F_{Machine[i]}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Itemize
\begin_inset Formula $W@R=1-F_{Produit}$
\end_inset


\end_layout

\begin_layout Standard
Exemple de loi de distribution de 
\begin_inset Formula $F_{Machine[i]}$
\end_inset

: Répartition Uniforme, Loi Normale, Loi de Poisson, Loi définie par morceaux
 (retour d'expérience).
\end_layout

\begin_layout Subsection
Niveau 2 : Modèle des quartiers avec criminalité croissante
\begin_inset Note Note
status open

\begin_layout Plain Layout
Ne prend pas en compte le medecin ou MSL, plus de modèle temporel
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On suppose maintenant que la fiabilité est différente sur chaque machine
 et décroit linéairement : 
\begin_inset Formula \begin{equation}
F_{MachineProduits[i]}=F_{MachineDefaut}-\left(\lambda_{Machine}\times N_{Produit}\right)\end{equation}

\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $N_{Produit}$
\end_inset

 le nombre de produits passés sur la machine depuis le dernier contrôle.
\end_layout

\begin_layout Itemize
\begin_inset Formula $F_{MachineDefaut}$
\end_inset

 est la fiabilité maximal par défaut, suite à un contrôle de la machine.
 
\end_layout

\begin_layout Standard
Afin de définir un seuil minmal de Fiabilité de la machine on définira la
 Fiabilité de la manière suivante 
\begin_inset Formula \begin{equation}
F_{Machine}=\max\left(F_{MachineMin},F_{MachineProduits[i]}\right)\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
pour 
\begin_inset Formula $i$
\end_inset

, de 
\begin_inset Formula $1$
\end_inset

à 
\begin_inset Formula $N$
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $F_{Produit}=F_{Produit}\times F_{Machine[i]}$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Fin Pour
\end_layout

\begin_layout Itemize
\begin_inset Formula $W@R=1-F_{Produit}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Modèles d'évolution fiabilité (ou la criminalité) d'une machine (ou quartier)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../Images/ModeleFiabilityWorkstation.png
	lyxscale 10
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Le graphique suivant représente l'évolution de la fiabilité d'une machine
 en fonction du nombre de produits qui passent sur la machine.
 Certains évenement font remonter le niveau de fiabilité de la machine à
 un seuil par défaut (trait rouge).
 De plus la fiabilité est minoré par un seuil minimal de fiabilité (trait
 bleu).
 Tant qu'aucun évenement de contrôle (MSL ou MSE) se produit sur la machine
 la fiabilité reste au même niveau.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Niveau 3 : Modèle du marcheur in-homogène
\begin_inset Note Note
status open

\begin_layout Plain Layout
N'est pas implemanté dans le code
\end_layout

\end_inset


\end_layout

\begin_layout Standard
On suppose maintenant que le type de marcheur (la technologie), est plus
 susceptible d'être blessé suivant son type intrinsèque
\end_layout

\begin_layout Standard
\begin_inset Formula \[
F_{Produit}=\beta_{type}\times F_{Produit}\]

\end_inset


\end_layout

\begin_layout Standard
avec 
\begin_inset Formula $\beta_{type}\in\left\{ \beta_{petit};\beta_{moyen};\beta_{grand}\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Comme dans la vie réelle un grand aura moins de chance d'être agressé qu'un
 petit.
\end_layout

\begin_layout Standard
Afin de faire le parallèle avec les technologie :
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{grand}$
\end_inset

 correspond aux technologies de logique, qui sont les plus faciles à mettre
 en oeuvre
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{moyen}$
\end_inset

 correspond aux technologies de mémoires, qui sont légèrement plus complexe.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\beta_{petit}$
\end_inset

 correspond aux technologies mixtes
\begin_inset Foot
status open

\begin_layout Plain Layout
mémoire et logique
\end_layout

\end_inset

 qui sont les technologies les plus délicates à mettre en oeuvre et ayant
 de fortes chances de générer de la non qualité.
\end_layout

\begin_layout Standard
Le calcul s'effectue de la même manière ensuite, on introduira simplement
 la nouvelle fiabilité du produit (
\begin_inset Formula $F_{Produit}$
\end_inset

).
 Il est à noter que les informations de complexité ne nous ayant pas été
 communiqué, cette partie de l'algorithme n'a pas été implémenté.
\end_layout

\begin_layout Section
Specification du Code
\end_layout

\begin_layout Standard
Vu la complexité du projet nous avons décidé de développer notre code en
 Java, la structure des données et l'algorithme nous incite à utiliser ce
 type de langage.
 De plus comme il s'agit simplement de la validation d'algorithme, ce code
 n'a pas pour vocation d'être développé ultérieurement.
 En effet le Java est le langage enseigné dans notre formation et permettra
 une implication de tous.
\end_layout

\begin_layout Subsection
Traitement des données
\end_layout

\begin_layout Subsubsection
Analyse des données
\end_layout

\begin_layout Standard
Afin de tester notre algorithme nous avons récupéré un fichier de données
 de 
\emph on
STMicroelectronics
\emph default
, afin de bien comprendre ces données nous allons les analyser.
 
\end_layout

\begin_layout Standard
On distingue différents champs de données :
\end_layout

\begin_layout Description
taskID
\begin_inset space ~
\end_inset

(Champs
\begin_inset space ~
\end_inset

Vide) Le premier champs vide est le numéro de la tâche, chaque tâche est
 numéroté de manière unique.
\end_layout

\begin_layout Description
Date Il s'agit de la date à laquelle l'évènement étudié a eu lieux.
 Il est à noter que notre fichier de données repose sur 15 jours de productions,
 le temps est donné en secondes.
\end_layout

\begin_deeper
\begin_layout Itemize
Le champs de la date est composé de 
\begin_inset Formula $14$
\end_inset

 chiffres, exemple : 
\begin_inset Formula $20101010162720$
\end_inset


\end_layout

\begin_layout Itemize
Les 4 premier chiffres représentent l'année, ici 
\begin_inset Formula $2010$
\end_inset


\end_layout

\begin_layout Itemize
Les 2 chiffres suivants représentent le mois, ici 
\begin_inset Formula $10$
\end_inset

 donc octobre
\end_layout

\begin_layout Itemize
Les 2 chiffres suivants représentent le jour, ici 
\begin_inset Formula $10$
\end_inset


\end_layout

\begin_layout Itemize
Les 6 chiffres suivants représentent l'heure, ici 
\begin_inset Formula $162720$
\end_inset

 qui donne 
\begin_inset Formula $16$
\end_inset

 heure 
\begin_inset Formula $27$
\end_inset

 min et 
\begin_inset Formula $20$
\end_inset

 secondes
\end_layout

\end_deeper
\begin_layout Description
Lot
\begin_inset space ~
\end_inset

(batch) Il s'agit du numéro du lot, impacté par la tâche.
 Dans le cas où ce champ est vide, cela veut dire que la machine ne traite
 pas de produit mais qu'on effectue une tâche qualité sur la machine.
\end_layout

\begin_layout Description
Oper
\begin_inset space ~
\end_inset

(operation) Ce champs qualifie le type d'opération effectués sur le lot
\end_layout

\begin_layout Description
Nbr
\begin_inset space ~
\end_inset

(quantity) Représente le nombre de Wafers concernés par un événement de
 process, c'est-à-dire le nombre de plaques passées dans la machine.
\end_layout

\begin_layout Description
Event Permet de qualifier le type d'évènement.
 Dans notre exemple nous avons trois types d'évènements différents :
\end_layout

\begin_deeper
\begin_layout Description
PRP représente une étape de fabrication du produit
\end_layout

\begin_layout Description
MSL indique une mesure effectuée sur un lot
\end_layout

\begin_layout Description
MSE indique une mesure réalisée sur un équipement (tâche de qualité, ou
 
\begin_inset Quotes fld
\end_inset

TQ
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_deeper
\begin_layout Description
Tech
\begin_inset space ~
\end_inset

(technology) Représente la technologie, nous disposons de cinq technologies
 différentes.
 Sur nos données il y a visiblement 5 types de technologie, cependant dans
 l'idée de rendre réalisable cette étude de faisabilité.
 Aucun détail n'est donné sur les technologies.
\end_layout

\begin_layout Description
Eqpt
\begin_inset space ~
\end_inset

(workstationID) Représente le numéro de l'équipement, chaque équipement
 est représenté par un identifiant unique.
\end_layout

\begin_layout Subsubsection
Classe des entités
\end_layout

\begin_layout Standard
Afin d'utiliser les données au mieux, nous allons organiser les données
 sous forme de la structure suivante détaillé dans la suite.
 Ces classes font partie du package 
\emph on
entities
\emph default
.
 Nous allons organiser les données par produit, machine et ordre.
 Dans le détail :
\end_layout

\begin_layout Description
MyDate classe qui organise une date, il est à noter que cette structure
 particulière repose sur la classe native Java qui s'appelle 
\emph on
Date
\emph default
 avec quelques petites adaptations.
\end_layout

\begin_deeper
\begin_layout Description
Entier
\begin_inset space ~
\end_inset

year
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

month
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

day
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

hour
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

minutes
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

secondes
\end_layout

\end_deeper
\begin_layout Description
Traçabilité
\begin_inset space ~
\end_inset

(Tracability) structure de la mémoire des événements, un objet de cette
 classe représente un événement élémentaire de l'usine de production.
\end_layout

\begin_deeper
\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Tâche numéro de tâche
\end_layout

\begin_layout Description
Date
\begin_inset space ~
\end_inset

date Donne la date de chaque tâche.
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Type Précise le type de tâche 
\end_layout

\end_deeper
\begin_layout Description
Machine
\begin_inset space ~
\end_inset

(WorkStation) Qualifie la ressource qui usine le procédé
\end_layout

\begin_deeper
\begin_layout Description
Collection
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

traçabilité 
\begin_inset Quotes fld
\end_inset

mémoire
\begin_inset Quotes frd
\end_inset

 de la ressource, c'est elle qui stocke les tâches se produisant sur la
 machine 
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Nom Le nom de la machine
\end_layout

\end_deeper
\begin_layout Description
Lot
\begin_inset space ~
\end_inset

(Batch) Classe qui qualifie un lot
\end_layout

\begin_deeper
\begin_layout Description
Collection
\begin_inset space ~
\end_inset

de
\begin_inset space ~
\end_inset

traçabilité 
\begin_inset Quotes fld
\end_inset

mémoire
\begin_inset Quotes frd
\end_inset

 du produit, c'est elle qui stocke les tâches se produisant sur la machine.
\end_layout

\begin_layout Description
Charactere
\begin_inset space ~
\end_inset

Nom Le nom du produit
\end_layout

\begin_layout Description
Entier
\begin_inset space ~
\end_inset

Technologie Permet de définir le type de technologie du lot
\end_layout

\end_deeper
\begin_layout Standard
Cette structure nous permet d'organiser les données de manière logique,
 et permet de piocher facilement dans les données.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de classe des objets entités
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../Images/ClasseEntity.dia
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Ce diagramme de classe représente les objets sur lesquels nous travaillerons
 et utiliseront notre algorithme
\emph default
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Implémentation du marcheur
\end_layout

\begin_layout Subsection
Marcheur 
\end_layout

\begin_layout Standard
Contient l'algorithme qui lance les méthodes de calculs qui se trouvent
 sur les batch et workstations.
 En effet les méthodes de calcul de fiabilité se font sur l'objet batch
 et Workstation.
 En effet à la vue de notre architecture, les données nécessaires au calcul
 sont présentes sur ces objets il est naturel d'associer les méthodes à
 ces objets.
\end_layout

\begin_layout Subsection
Lecture de fichier (Storage)
\end_layout

\begin_layout Standard
Nous organisons notre lecture de fichier de façon à ranger les informations
 dans la bonne structure.
\end_layout

\begin_layout Standard
On définit une classe qui lit les fichiers et instancie les traçabilités
 associées à chaque ligne.
 De plus ce chargeur de fichier est spécificié pour comprendre le fichier
 donné par 
\emph on
STMICROELECTRONICS.
 
\emph default
Le fichier donné est une extraction de la base de donnée 
\emph on
ST, 
\emph default
qui pour des raisons de confidentialité a été anonymisé.
 
\end_layout

\begin_layout Subsection
Extracteur
\end_layout

\begin_layout Standard
Ces classes interprètent les traçabilité extraites par le load et crée les
 objets batch, workstation et insère les traçabilités associées.
 Il fait en quelque sorte le trie des données et permet d'associer chaque
 traçabilité à la machine et au lot qui lui correspond.
 De plus ces classes créent les objets et instance d'objet nécessaire à
 l'excution de l'algorithme.
 
\end_layout

\begin_layout Subsection
Package entities
\end_layout

\begin_layout Standard
C'est dans ce package que se situe le coeur de l'algorithme.
 En effet les calculs de fiabilités sont des méthodes associées au objets
 
\emph on
Batch
\emph default
 et 
\emph on
Workstation
\emph default
.
 Ces objets possèdent comme atributs leur nom, leur technoloie et leur mémoire
 qui est représenté par une collection de 
\emph on
tracabilies
\emph default
 ce qui rend le calcul d'indice de santé plus facile à effectuer (détail
 du code source en section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Classe-Workstation"

\end_inset

 et 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Classe-Batch"

\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de classe des différentes entitées
\end_layout

\end_inset


\begin_inset Graphics
	filename ../Images/DiagrammeClassEntities.svg
	lyxscale 40
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Ce diagramme de classe représente l'ensemble des classes entities, les Batch
 et Workstation contiennent des collections de tracability, qui constituent
 la mémoire de chacun des éléments.
 De plus 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Classe Constants
\end_layout

\begin_layout Standard
Les connaissances métiers pouvant être à même d'évoluer nous avons effectué
 une classe constante qui regroupe toutes les données utilisés pour les
 calculs d'algorithme et peuvent être regler très facilement.
 On retrouve dans cette classe les attributs suivants :
\end_layout

\begin_layout Description
FIELD_QUANTITY_IN_FILE_ROW il s'agit là d'un paramètre pour lire et interpréter
 le fichier de départ
\end_layout

\begin_layout Description
DEFAULT_VALUE_WHEN_EMPTY_ROW Permet de donner le texte à écrire lors de
 la lecture d'un caractère vide
\end_layout

\begin_layout Description
DISTURBANCE_WORSTATION_PER_EVENT Il s'agit là du déreglement d'une machine
 après le passage d'un lot il s'agit de 
\begin_inset Formula $\lambda_{Dereglement}$
\end_inset


\end_layout

\begin_layout Description
FIABILITY_DEFAULT_BATCH Il s'agit de l'indice de santé par défaut d'un lot
 
\begin_inset Formula $Indice_{Santé}$
\end_inset


\end_layout

\begin_layout Description
FIABILITY_DEFAULT_WORKSTATION Il s'agit là de la fiabilité d'une machine
 par défaut 
\begin_inset Formula $F_{MachineDefaut}$
\end_inset


\end_layout

\begin_layout Description
FIABILITY_MIN_WORSKATION Il s'agit du seuil minimal de fiabilité d'une machine
 
\begin_inset Formula $F_{MachineMin}$
\end_inset


\end_layout

\begin_layout Description
SHORT_FILE Il s'agit là du chemin des données courtes (pour les tests rapides)
\end_layout

\begin_layout Description
LONG_FILE le chemin pour les données complètes
\end_layout

\begin_layout Description
QUALITYTASK La chaine de charactère qui indique une tâche de qualité sur
 une machine
\end_layout

\begin_layout Description
BATCH_CONTROL Chaine de caractère qui indique un contrôle de lot 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de classe des constantes
\end_layout

\end_inset


\begin_inset Graphics
	filename ../Images/DiagrammeClassConstants.svg
	lyxscale 40
	width 50col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Cette classe permet de paramétrer l'ensemble du projet en definissant les
 constantes utilisées dans le projet.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Package Extractors
\end_layout

\begin_layout Standard
C'est le package qui contient toutes les classes permettant de créer les
 
\emph on
Batch
\emph default
 et les 
\emph on
Workstation
\emph default
 à partir de l'ensemble des traçabilités générees par les classes StoreData
\begin_inset Foot
status open

\begin_layout Plain Layout
Ces classes ne sont pas détaillés, car elles ne font que lire et écrire
 dans des fichiers.
 Comme il n'y a rien de nouveau sous le soleil nous passons cette partie
 sous silence
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagramme de classe des extractors
\end_layout

\end_inset


\begin_inset Graphics
	filename ../Images/DiagrameClassExtractors.svg
	lyxscale 40
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Cet ensemble de classe permet d'affecter les traçabilités au seins des bons
 lots et des bonnes machines
\end_layout

\end_inset


\end_layout

\begin_layout Section
Résultats
\end_layout

\begin_layout Standard
Pour représenter les résultats de l'algorithme.
 Nous représentons dans un graphique en deux dimensions dans lequel on affiche
 l'indice de santé en fonction de l'avancement du produit (cf Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Représentation-des-résultats"

\end_inset

) 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Représentation-des-résultats"

\end_inset

Représentation des résultats après calculs
\end_layout

\end_inset


\begin_inset Graphics
	filename ../Images/GrapheDonnee.eps
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\emph on
Sur l'axe des abscisses nous avons l'avancement du produit et l'axe des
 ordonées représente l'indice de santé.
 Chaque croix représente un produit à l'instant t.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Inconvénient de cette méthode
\end_layout

\begin_layout Subsection
Complexité 
\end_layout

\begin_layout Standard
L'un des plus gros problèmes de ce type de solution est la complexité du
 code.
 En effet des boucles imbriquées entre elles fait que pour 
\begin_inset Formula $n$
\end_inset

 données nous avons 
\begin_inset Formula $\log(3\times n)$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
A calculer !!!!
\end_layout

\end_inset

calculs.
 Ce qui est génant dans ce type de problème car le nombre de donnée est
 assez considérable et le temps de calcul qui en découle est important.
\end_layout

\begin_layout Subsection
Manque de réalisme avec la réalité
\end_layout

\begin_layout Standard
Le code actuel ne fait pas état de la réalité complète.
 Pour les besoins de l'études quelques hypothèses simplificatrices ont été
 faites : 
\end_layout

\begin_layout Itemize
Les technologies ne sont pas détaillées dans les données traitées.
\end_layout

\begin_layout Itemize
Les contrôles MSE et MSL sont sur une technologie particulière et non pas
 sur la 
\begin_inset Formula $F_{Produit}$
\end_inset

 globale de la 
\emph on
Workstation
\emph default
 et le 
\emph on
Batch
\emph default
.
 Une adaptation du modèle serait le bienvenue pour adapter de manière plus
 fine l'analyse avec le problème.
 Les 
\emph on
MSL
\emph default
 et 
\emph on
MSE
\emph default
 sont découpées en des sous catégories qui dépendent des technologies analysées.
\end_layout

\begin_layout Itemize
Dans notre projet toutes les machines ont le même poid pour le calcul de
 la fiabilité.
 Ce qui diffère avec la réalité, c'est que certaines machines ont un poid
 plus important que d'autres.
\end_layout

\begin_layout Standard
Ces propositions constituent des modifications à faire pour un développement
 ultérieur.
 
\end_layout

\end_body
\end_document
